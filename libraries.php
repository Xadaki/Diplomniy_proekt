<!DOCTYPE html>
<html>
<head>
<title>Библиотеки</title>
<meta charset="utf-8">
<style>
   table {
    width: 700px; 
    border: 0px white; 
    margin: auto;
   }
   td {
    text-align: left; 
   }
</style>
</head>
<body>

<table>
<tr><td>

<div class="blog-section blog-section--post-info blog-section--fullwidth">
    <div class="blog-section__wrap">
        <div class="blog-section__content">
            <div class="blog-section__wrap-inner">
                <div class="post-info post-info--fullwidth">
                    <h1 class="post-info__title" style="text-align:center;">Как подключить библиотеку в PHP. Простой путь</h1>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="blog-section blog-section--post-content blog-section--fullwidth">
    <div class="blog-section__wrap">
        <div class="blog-section__content blog-section__content--short">
            <div class="blog-section__wrap-inner">
                <div class="post-content post-content--fullwidth">
                    <p>Библиотека&nbsp;— это программный код, оформленный в&nbsp;виде отдельного компонента, который используют для решения изолированной задачи.</p>
                    <h2 style="text-align:center;">Назначение библиотек</h2>
                    <p>Уровень разработчика определяется не&nbsp;только знанием языка, но&nbsp;и&nbsp;умением искать и&nbsp;выбирать подходящие инструменты для решения задачи. Если есть возможность использовать качественное готовое решение, то&nbsp;это лучший выбор.</p>
                    <p>Готовые решения помогают писать меньше кода и&nbsp;сосредоточиться на&nbsp;предметной области проекта. Большинство библиотек свободно распространяются в&nbsp;интернете и&nbsp;доступны для бесплатного использования.</p>
                    <p>Обычно библиотека&nbsp;— это набор PHP-сценариев, запакованных в&nbsp;архив. При установке файлы распаковываются из&nbsp;архива в&nbsp;определённую папку внутри вашего проекта. Как правило, один проект использует несколько библиотек.</p>
                    <h3 style="text-align:center;">Когда использовать библиотеку</h3>
                    <p>Готовые решения используют для упрощения работы с&nbsp;базовыми операциями, которые часто встречаются в&nbsp;любом веб-проекте.</p>
                    <p>Примеры: отправка сообщений электронной почты, валидация форм, работа с&nbsp;графикой, изменение размера изображений, работа с&nbsp;архивами.</p>
                    <p>Библиотеки не&nbsp;заменят весь код проекта, но&nbsp;помогут в&nbsp;большой части рутинных действий.</p>
                    <p>При выборе библиотеки обратите внимание на&nbsp;наличие качественной документации. Она описывает возможности библиотеки и&nbsp;способы её&nbsp;использования. Если документация неполная, устаревшая или отсутствует, то&nbsp;использовать эту библиотеку будет очень сложно. Придётся самостоятельно разбираться в&nbsp;её&nbsp;исходном коде.</p>
                    <p>Второе важное качество библиотеки&nbsp;— это частота её&nbsp;использования другими программистами. Как узнать этот показатель? Можно ориентироваться на&nbsp;количество звёзд на&nbsp;GitHub, количество результатов при поиске или данные сервиса Google Trends.</p>
                    <p>Почему это важно? Чем больше у&nbsp;библиотеки пользователей, тем проще будет найти ответ в&nbsp;затруднительной ситуации или разобраться в&nbsp;особенностях использования.</p>
                    <p>Последний критерий, определяющий правильный выбор библиотеки&nbsp;— это набор предлагаемых&nbsp;возможностей. Для решения одной задачи существует несколько библиотек-конкурентов. И&nbsp;отличаются они не&nbsp;только документацией и&nbsp;пользовательской базой, но&nbsp;и&nbsp;общей функциональностью. Чтобы не&nbsp;забивать гвозди микроскопом, постарайтесь определить, не&nbsp;будет&nbsp;ли выбранное решение слишком&nbsp;громоздким для задачи. Если это так, то&nbsp;лучше найти более простое решение.</p>
                    <h3 style="text-align:center;">Пример подключения и&nbsp;использования библиотеки</h3>
                    <p>Работа с&nbsp;библиотекой состоит из&nbsp;трёх шагов:</p>
                    <ul>
                        <li>установка</li>
                        <li>подключение</li>
                        <li>использование</li>
                    </ul>
                    <p>Всё просто: нужно зайти на&nbsp;сайт с&nbsp;библиотекой, скачать архив и&nbsp;распаковать его в&nbsp;папку с&nbsp;PHP-сценариями.</p>
                    <p>Затем необходимо подключить сценарии с&nbsp;классами библиотеки. Далее в&nbsp;коде происходит создание новых объектов этих классов и&nbsp;вызов их&nbsp;методов. Такая процедура работы типична для любой библиотеки.</p>
                    <h2 style="text-align:center;">Зависимости библиотеки</h2>
                    <p>Мы&nbsp;используем библиотеки, чтобы писать меньше кода и&nbsp;сосредоточиться на&nbsp;главном. Ирония в&nbsp;том, что авторы библиотек поступают точно так&nbsp;же. В&nbsp;коде библиотек они сами используют другие библиотеки для облегчения своей работы.</p>
                    <p>Вот пример: мы&nbsp;скачали библиотеку «А», а&nbsp;она, в&nbsp;свою очередь, использует библиотеку «Б». При этом код библиотеки «Б» мы&nbsp;не&nbsp;загружали и&nbsp;не&nbsp;устанавливали. Тогда библиотекой «А» воспользоваться не&nbsp;получится, потому что она не&nbsp;будет работать, пока дополнительно не&nbsp;будет установлена библиотека «Б». Такие отношения между библиотеками называются зависимостями.</p>
                    <p>Всё ещё больше усложняется, когда зависимость включает не&nbsp;только название библиотеки, но&nbsp;и&nbsp;конкретную версию.</p>
                </div>
            </div>
        </div>
    </div>
</div>
</tr></td>
</table>
<br></br>
<br></br>
<br></br>
<div align="center">
<a href="objects.php">Предыдущий раздел</a>| <a href="index.html">На главную</a>
</div>
<br></br>

</body>